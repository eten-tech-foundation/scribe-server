# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - scribe-server-dev

on:
  push:
    branches:
      - azure/deploy
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: '22.15.0'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Type check
        run: pnpm typecheck

      - name: Build application
        run: pnpm build

      - name: Install production dependencies
        run: |
          # Clean install production dependencies
          rm -rf node_modules
          pnpm install --frozen-lockfile --prod

      - name: Create clean deployment package
        run: |
          # Create a completely clean deployment directory
          mkdir clean-deployment

          # Copy ONLY what we need for production
          cp -r dist clean-deployment/
          cp -r node_modules clean-deployment/
          cp package.json clean-deployment/

          # Create a simple web.config for better Azure routing
          cat > clean-deployment/web.config << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <configuration>
            <system.webServer>
              <handlers>
                <add name="iisnode" path="dist/src/index.js" verb="*" modules="iisnode"/>
              </handlers>
              <rewrite>
                <rules>
                  <rule name="DynamicContent">
                    <match url="/*" />
                    <action type="Rewrite" url="dist/src/index.js"/>
                  </rule>
                </rules>
              </rewrite>
            </system.webServer>
          </configuration>
          EOF

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: clean-deployment/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Clean wwwroot using Kudu API
        run: |
          # Get publish profile credentials
          PUBLISH_PROFILE='${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_947D34B0D69C4986A7E211253893C796 }}'

          # Extract username and password from publish profile
          USERNAME=$(echo "$PUBLISH_PROFILE" | grep -o 'userName="[^"]*"' | cut -d'"' -f2)
          PASSWORD=$(echo "$PUBLISH_PROFILE" | grep -o 'userPWD="[^"]*"' | cut -d'"' -f2)

          # Clean wwwroot directory using Kudu API
          echo "Cleaning wwwroot directory..."
          curl -X POST "https://scribe-server-dev.scm.azurewebsites.net/api/command" \
            -H "Content-Type: application/json" \
            -d '{"command": "rmdir /s /q D:\\home\\site\\wwwroot", "dir": "D:\\home\\site"}' \
            -u "$USERNAME:$PASSWORD" || echo "Clean command executed"

          # Recreate wwwroot directory
          curl -X POST "https://scribe-server-dev.scm.azurewebsites.net/api/command" \
            -H "Content-Type: application/json" \
            -d '{"command": "mkdir D:\\home\\site\\wwwroot", "dir": "D:\\home\\site"}' \
            -u "$USERNAME:$PASSWORD" || echo "Recreate command executed"

          # Wait a moment for cleanup
          sleep 5

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'scribe-server-dev'
          slot-name: 'Production'
          package: .
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_947D34B0D69C4986A7E211253893C796 }}
