name: Scribe Server CI/CD

on:
  push:
    branches:
      - main
      - azure/deploy

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Set up Node.js v22
        uses: actions/setup-node@v4
        with:
          node-version: '22.15.0'
          cache: 'pnpm'

      - name: Install Dependencies
        run: pnpm install

      - name: Build Project
        run: pnpm run build

      - name: Create Production Package
        run: |
          mkdir deploy
          cp -r dist deploy/
          
          # Create minimal production package.json
          node -e "
            const fs = require('fs');
            const originalPkg = require('./package.json');
            const productionPkg = {
              name: originalPkg.name,
              version: originalPkg.version,
              type: originalPkg.type,
              main: 'dist/src/index.js',
              scripts: {
                start: 'node dist/src/index.js'
              },
              dependencies: originalPkg.dependencies,
              engines: {
                node: '>=22.0.0'
              }
            };
            fs.writeFileSync('deploy/package.json', JSON.stringify(productionPkg, null, 2));
          "

      - name: Install Production Dependencies
        run: |
          cd deploy
          npm install --production --no-audit --no-fund

      - name: Create .deployment file
        run: |
          echo '[config]' > deploy/.deployment
          echo 'SCM_DO_BUILD_DURING_DEPLOYMENT=false' >> deploy/.deployment

      - name: Show Deploy Contents (Debug)
        run: |
          echo "=== Deploy folder structure ==="
          find deploy -type f -name "*.json" -o -name "*.js" | head -20
          echo "=== package.json contents ==="
          cat deploy/package.json
          echo "=== .deployment contents ==="
          cat deploy/.deployment

      - name: Zip Deploy Folder
        run: |
          cd deploy
          zip -r ../deploy.zip .

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'scribe-server-dev'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_AAFEB4AF5C6640678CF82A95C3F936A7 }}
          package: deploy.zip

      - name: Test Deployment
        run: |
          echo "Waiting for deployment to complete..."
          sleep 90

          echo "=== Testing Root URL ==="
          curl -v -s -w "\nHTTP Status: %{http_code}\nResponse Time: %{time_total}s\n" \
            https://scribe-server-dev-f3c7f3a6f2bde7ec.westeurope-01.azurewebsites.net || echo "Connection test completed"

          echo "=== Testing /health Endpoint ==="
          curl -v -s -w "\nHTTP Status: %{http_code}\nResponse Time: %{time_total}s\n" \
            https://scribe-server-dev-f3c7f3a6f2bde7ec.westeurope-01.azurewebsites.net/health || echo "Health check completed"

      - name: Deployment Status
        if: always()
        run: |
          echo "=== Deployment Summary ==="
          echo "App Name: scribe-server-dev"
          echo "URL: https://scribe-server-dev-f3c7f3a6f2bde7ec.westeurope-01.azurewebsites.net"
          echo "Check Azure Portal for detailed logs: https://portal.azure.com/"