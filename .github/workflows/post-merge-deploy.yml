# Deploys Scribe-server Node.js app to Azure Web Apps after merge
name: Post-merge-deploy
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: Environment to deploy to
        required: true
        default: dev
        type: choice
        options:
          - dev
          - prod

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: 22.15.0
          cache: npm

      - name: Install all dependencies
        run: npm install --legacy-peer-deps

      - name: Lint and format check
        run: |
          npm run lint
          npm run format:check

      - name: Type check
        run: npm run typecheck

      - name: Run tests
        run: npm run test

      - name: Build application
        run: npm run build

      - name: Create deployment package directory
        run: |
          mkdir -p deployment
          cp -r dist deployment/
          cp package.json deployment/
          cp package-lock.json deployment/ || true

      - name: Install production dependencies
        run: |
          cd deployment
          npm install --prod --legacy-peer-deps

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: deployment/

  deploy-dev:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'dev')
    environment:
      name: Development
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
          path: deployment/

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: scribe-server-dev
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_947D34B0D69C4986A7E211253893C796 }}
          package: deployment/
          clean: true

      - name: Verify deployment
        run: |
          sleep 30
          for i in $(seq 1 10); do
            response=$(curl -s -o /dev/null -w "%{http_code}" ${{ steps.deploy-to-webapp.outputs.webapp-url }})
            if [ "$response" -ge 200 ] && [ "$response" -lt 400 ]; then
              echo "Dev deployment successful (HTTP $response)"
              exit 0
            else
              echo "App not ready yet (HTTP $response). Retrying in 10 seconds..."
              sleep 10
            fi
          done
          echo "Dev deployment verification failed"
          exit 1

  deploy-prod:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'prod'
    environment:
      name: Production
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
          path: deployment/

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: scribe-server-prod
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_PROD }}
          package: deployment/
          clean: true

      - name: Verify deployment
        run: |
          sleep 45
          for i in $(seq 1 12); do
            response=$(curl -s -o /dev/null -w "%{http_code}" ${{ steps.deploy-to-webapp.outputs.webapp-url }})
            if [ "$response" -ge 200 ] && [ "$response" -lt 400 ]; then
              echo "Production deployment successful (HTTP $response)"
              exit 0
            else
              echo "App not ready yet (HTTP $response). Retrying in 15 seconds..."
              sleep 15
            fi
          done
          echo "Production deployment verification failed"
          exit 1
